<?php
session_start();
include("db.php");
$database = make_connection("my_db");

include("includes/func.php");
$login = false;

if( (isset($_POST['Login'])) && isset($_POST['username']) && isset($_POST['password']) ){
    
    checkToken($_REQUEST['user_token'], $_SESSION['session_token']);
    $user = $_POST['username'];
    $pass = $_POST['password'];

    $total_failed_login = 3;
    $lockout_time = 3;
    $account_locked = false;

    $query1 =  "SELECT failed_login, last_login FROM `users` WHERE username = ?";
    $statement1 = $database->prepare($query1);
    $statement1->bind_param('s', $user);
    $statement1->execute();
    $result=$statement1->get_result();
    $row1 = $result->fetch_assoc();

    if( ($result->num_rows==1) && ($row1['failed_login'] >= $total_failed_login && $login == false) ){
         // User locked out.  Note, using this method would allow for user enumeration!
        echo "<pre><br />This account has been locked due to too many incorrect logins.</pre>";
        $last_login = strtotime($row1['last_login']);
        $timeout = $last_login + ($lockout_time *60);
        $timenow = time();

        if($timenow < $timeout){
            $account_locked = true;
            echo "<pre><br />Try again 3 minutes bro! </pre>";
        } else {
            $account_locked = false;
        }
        
    }
    $query2 =  "SELECT * FROM `users` WHERE username = ? AND password = ?";
    $statement2 = $database->prepare(($query2));
    $statement2->bind_param('ss',$user, $pass);
    $statement2->execute();
    $result2 = $statement2->get_result();
    $row2 = $result2->fetch_assoc();
    //Valid login

    if(($result2->num_rows== 1) && ($account_locked == false)){

        $avatar = $row2['image_data'];
        $failed_login = $row2['failed_login'];
        $last_login = $row2['last_login'];
        //success
        echo "<p>Welcome to the password protected area <em>{$user}</em></p>";
        echo "<img src=\"{$avatar}\" />";
     
        $query3 = 'UPDATE `users` SET failed_login = 0 WHERE username = ? LIMIT 1';
        $statement3 = $database->prepare($query3);
        $statement3->bind_param('s',$user);
        $statement3->execute();
        $login = true;

    } else {
        //failed
        sleep(rand(1,3));
        //Incorrect feedback
        echo "<br />Username and/or password incorrect.<br />";
        //Update failed login 
        $query4 = 'UPDATE `users` SET failed_login = failed_login + 1 WHERE username = ? LIMIT 1';

        //Wanna reset?
        //$query4 = 'UPDATE `users` SET failed_login = 0 WHERE username = ? LIMIT 1';

        $statement4 = $database->prepare($query4);
        $statement4->bind_param('s', $user);
        $statement4->execute();

        echo "<pre>Login failed: {$row1['failed_login']}</pre>";
    } 
    //Set login time
    $query5 = 'UPDATE `users` SET last_login = now() WHERE username = ? LIMIT 1';
    $statement5 = $database->prepare($query5);
    $statement5->bind_param('s', $user);
    $statement5->execute();

}
generateSessionToken();
if ($login == false){
 include("static/html/login.html");
}

?>